@model FlyHigh.Models.Flight

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(new { role = "form", @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
    
        <div class="form-group">
            @Html.LabelFor(model => model.FromAirportId, "From Airport", new { @class="col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.DropDownList("FromAirportId", (IEnumerable<SelectListItem>) ViewBag.FromAirportId, new { @class="form-control" })
                @Html.ValidationMessageFor(model => model.FromAirportId)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ToAirportId, "To Airport", new { @class="col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.DropDownList("ToAirportId", (IEnumerable<SelectListItem>) ViewBag.ToAirportId, new { @class="form-control" })
                @Html.ValidationMessageFor(model => model.ToAirportId)
            </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Departure)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Departure)
            @Html.ValidationMessageFor(model => model.Departure)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Duration)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Duration)
            @Html.ValidationMessageFor(model => model.Duration)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BasePrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BasePrice)
            @Html.ValidationMessageFor(model => model.BasePrice)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
